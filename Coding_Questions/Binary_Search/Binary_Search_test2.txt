# This will be the final test before I move onto the next challenge

# Linear search for an O(n) method

def Linear_Search(arr, target):
	if target < arr[0] or target > arr[-1]:
		return [-1,-1]
	for i in range(len(arr)-1):
		if arr[i] == target:
			start = i
			if arr[-1] == target:
				return [start, len(arr)-1]
			while arr[i] == target:
				i+=1
			end = i-1
			return [start,end]
	return [-1,-1]

Array = [0,0,0,0,0,1,1,1,1,1,2,2,2,3,3,3]
Target = 3
print(Linear_Search(Array, Target))

# The Binary Search Method

def find_start(arr, target):
	if arr[0] == target:
		return 0
	left = 0
	right = len(arr)-1

	while left <= right:
		mid = (left + right) // 2
		if arr[mid] == target and arr[mid-1] < target:
			return mid
		elif arr[mid] < target:
			left = mid + 1
		else:
			right = mid - 1
	return -1

def find_end(arr, target):
	if arr[-1] == target:
		return len(arr)-1	
	left = 0
	right = len(arr)-1

	while left <= right:
		mid = (left + right) // 2
		if arr[mid] == target and arr[mid+1] > target:
			return mid
		elif arr[mid] > target:
			right = mid - 1
		else:
			left = mid + 1
	return -1

def find_end_start(arr, target):
	if target < arr[0] or target > arr[-1]:
		print("Here")
		return [-1,-1]
	start = find_start(arr, target)
	end = find_end(arr, target)

	return [start, end]

print(find_end_start(Array, Target))
